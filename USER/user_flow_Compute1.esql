

CREATE COMPUTE MODULE user_flow_Compute1
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		
		IF InputRoot.JSON.Data.msg = 'validation DONE' THEN
			SET OutputLocalEnvironment.Destination.File.Directory = 'C:\Users\Mahmoud Mohsen\IBM\ACET12\workspace\User\registerd users';
			SET OutputLocalEnvironment.Destination.File.Name = InputRoot.JSON.Data.national_id || ' ' ||  Environment.Variables.channel || '.txt';

		ELSE IF InputRoot.JSON.Data.msg = 'national id not found' THEN
			SET OutputLocalEnvironment.Destination.File.Directory = 'C:\Users\Mahmoud Mohsen\IBM\ACET12\workspace\User\invalid users';
			SET OutputLocalEnvironment.Destination.File.Name = 'enterd id not found.txt';
		ELSE 
			SET OutputLocalEnvironment.Destination.File.Directory = 'C:\Users\Mahmoud Mohsen\IBM\ACET12\workspace\User\invalid users';
			SET OutputLocalEnvironment.Destination.File.Name =  'error registration for user with id ' || InputRoot.JSON.Data.national_id || '.txt';
		END IF;
		END IF;
		
		SET OutputRoot.JSON.Data = InputRoot.JSON.Data;


		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;
